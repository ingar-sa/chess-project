DEL 1

- Fullverdig sjakk, dvs. vanlige sjakkregeler: en passent, rokade og promotering er med. 

- Regler som trekkgjentagelse og antall trekk uten at en brikke blir tatt er ikke med 

- Vi beregner alle lovlige trekk før brukeren gjør noe som helst, slik kan vi vise alle lovlige trekk i GUI

- Mulighet for lagring og opplasting av spill, ikke brae hvor brikkene står, men også game state: f.eks. om en brikke har flyttet på seg - relevent for rokade osv.ALLE

DEL 2

 - Objekttilstandsdiagram

DEL 3
 
1. Hvilke deler av pensum i emnet dekkes i prosjektet, og på hvilken måte? (For
    eksempel bruk av arv, interface, delegering osv.)

  - 



2. Dersom deler av pensum ikke er dekket i prosjektet deres, hvordan kunne dere
    brukt disse delene av pensum i appen?

    - Delegering?
    - Abstrakte metoder
    - Innkapsling i mappe
    - 


3. Hvordan forholder koden deres seg til Model-View-Controller-prinsippet? (Merk:
    det er ikke nødvendig at koden er helt perfekt i forhold til Model-View-Controller
    standarder for å få full uttelling på dette spørsmålet. Det er mulig (og bra) å
    reflektere rundt svakheter i egen kode)


    
4. Hvordan har dere gått frem når dere skulle teste appen deres, og hvorfor har
    dere valgt de testene dere har? Har dere testet alle deler av koden? Hvis ikke,
    hvordan har dere prioritert hvilke deler som testes og ikke? (Her er tanken at
    dere skal reflektere rundt egen bruk av tester)
    


5. Har dere møtt på noen utfordringer i løpet av prosjektet? Hva ville dere gjort
    annerledes en annen gang?

    - Innkapsling dype strukturer, eksempel:
    - Utfordinger knyttet til kompliserte strukturer:
    - Holde styr på alle små ting med sjakk
    - Kompleksitet som går utover nivået til undervisningen
    - Bruker kan kun endre ting i GUI, og tilstand vil alltid være gyldig derfor,
      men andre klasser kan endre tilstand vilkårlig, og vi må derfor håndtere validering av det,
      selv om det ikke er nødvendig i det ferdige produktet.
    
    Hva ville dere gjort annerledes en annen gang?

    - Tenke mer over innkapsling osv. mens man skrier koden
    - Annet prosjekt?
    - Skrevet noe annet til fil, veldig vanskelig å kontrollere enn kompleks streng både i forhold til at strengen er gyldig i seg selv, men også at den er gyldig i forhold til programmet og sjakk



TESTER SOM KAN SKRIVES

Trenger ikke å teste enkle getters og setters, app og controller 

 - Pieces
 - Checklegalmoves
 - Movementpatterns

TESTER SOM MÅ VENTES MED

 - Game